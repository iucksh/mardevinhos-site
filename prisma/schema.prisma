// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  company   String?
  role      String   @default("CLIENT")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments Appointment[]
  contacts     Contact[]
  quotes       Quote[]

  @@map("users")
}

model Appointment {
  id          String   @id @default(cuid())
  userId      String?
  name        String
  email       String
  phone       String
  company     String
  type        String
  date        String
  time        String
  observations String?
  status      String   @default("PENDING") // PENDING, CONFIRMED, CANCELLED, COMPLETED
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])

  @@map("appointments")
}

model Contact {
  id       String   @id @default(cuid())
  userId   String?
  name     String
  email    String
  phone    String?
  company  String?
  type     String
  message  String
  status   String   @default("NEW") // NEW, IN_PROGRESS, RESOLVED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])

  @@map("contacts")
}

model Quote {
  id          String   @id @default(cuid())
  userId      String?
  name        String
  email       String
  phone       String?
  company     String
  type        String
  description String
  budget      String?
  status      String   @default("PENDING") // PENDING, SENT, ACCEPTED, REJECTED
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])

  @@map("quotes")
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("newsletter")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String
  content     String
  category    String
  image       String?
  published   Boolean  @default(false)
  featured    Boolean  @default(false)
  readTime    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("blog_posts")
}